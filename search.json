[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Julia course",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n\n\n Back to top"
  },
  {
    "objectID": "lecture1.html",
    "href": "lecture1.html",
    "title": "Introduction to Julia ecosystem",
    "section": "",
    "text": "Updating registry at `~/.julia/registries/General.toml`\n   Resolving package versions...\n   Installed Crayons ───────────────────── v4.1.1\n   Installed PooledArrays ──────────────── v1.4.3\n   Installed SentinelArrays ────────────── v1.4.5\n   Installed DataAPI ───────────────────── v1.16.0\n   Installed Tables ────────────────────── v1.12.0\n   Installed TableTraits ───────────────── v1.0.1\n   Installed InlineStrings ─────────────── v1.4.2\n   Installed PrettyTables ──────────────── v2.4.0\n   Installed IteratorInterfaceExtensions ─ v1.0.0\n   Installed LaTeXStrings ──────────────── v1.4.0\n   Installed InvertedIndices ───────────── v1.3.0\n   Installed DataValueInterfaces ───────── v1.0.0\n   Installed OrderedCollections ────────── v1.6.3\n   Installed Statistics ────────────────── v1.11.1\n   Installed DataStructures ────────────── v0.18.20\n   Installed DataFrames ────────────────── v1.7.0\n   Installed Compat ────────────────────── v4.16.0\n   Installed Missings ──────────────────── v1.2.0\n   Installed Reexport ──────────────────── v1.2.2\n   Installed StringManipulation ────────── v0.4.0\n   Installed SortingAlgorithms ─────────── v1.2.1\n    Updating `~/.julia/environments/v1.11/Project.toml`\n  [a93c6f00] + DataFrames v1.7.0\n    Updating `~/.julia/environments/v1.11/Manifest.toml`\n  [34da2185] + Compat v4.16.0\n  [a8cc5b0e] + Crayons v4.1.1\n  [9a962f9c] + DataAPI v1.16.0\n  [a93c6f00] + DataFrames v1.7.0\n  [864edb3b] + DataStructures v0.18.20\n  [e2d170a0] + DataValueInterfaces v1.0.0\n  [842dd82b] + InlineStrings v1.4.2\n  [41ab1584] + InvertedIndices v1.3.0\n  [82899510] + IteratorInterfaceExtensions v1.0.0\n  [b964fa9f] + LaTeXStrings v1.4.0\n  [e1d29d7a] + Missings v1.2.0\n  [bac558e1] + OrderedCollections v1.6.3\n  [2dfb63ee] + PooledArrays v1.4.3\n  [08abe8d2] + PrettyTables v2.4.0\n  [189a3867] + Reexport v1.2.2\n  [91c51154] + SentinelArrays v1.4.5\n  [a2af1166] + SortingAlgorithms v1.2.1\n  [10745b16] + Statistics v1.11.1\n  [892a3eda] + StringManipulation v0.4.0\n  [3783bdb8] + TableTraits v1.0.1\n  [bd369af6] + Tables v1.12.0\n  [9fa8497b] + Future v1.11.0\n  [37e2e46d] + LinearAlgebra v1.11.0\n  [e66e0078] + CompilerSupportLibraries_jll v1.1.1+0\n  [4536629a] + OpenBLAS_jll v0.3.27+1\n  [8e850b90] + libblastrampoline_jll v5.11.0+0\nPrecompiling project...\n    771.2 ms  ✓ DataValueInterfaces\n    778.4 ms  ✓ LaTeXStrings\n    780.1 ms  ✓ Reexport\n    857.5 ms  ✓ InvertedIndices\n   1088.1 ms  ✓ OrderedCollections\n    764.0 ms  ✓ IteratorInterfaceExtensions\n    888.5 ms  ✓ DataAPI\n   1011.9 ms  ✓ Statistics\n   1149.3 ms  ✓ InlineStrings\n    887.3 ms  ✓ TableTraits\n   1295.5 ms  ✓ Compat\n   2131.6 ms  ✓ Crayons\n   1152.5 ms  ✓ PooledArrays\n    895.3 ms  ✓ InlineStrings → ParsersExt\n    975.5 ms  ✓ Missings\n   2960.3 ms  ✓ SentinelArrays\n    650.7 ms  ✓ Compat → CompatLinearAlgebraExt\n   3380.5 ms  ✓ StringManipulation\n   1214.6 ms  ✓ Tables\n   1824.0 ms  ✓ DataStructures\n    573.0 ms  ✓ SortingAlgorithms\n  17389.7 ms  ✓ PrettyTables\n  40901.9 ms  ✓ DataFrames\n  23 dependencies successfully precompiled in 64 seconds. 45 already precompiled.\n   Resolving package versions...\n   Installed CodecZlib ────────── v0.7.6\n   Installed WorkerUtilities ──── v1.6.1\n   Installed WeakRefStrings ───── v1.4.2\n   Installed FilePathsBase ────── v0.9.22\n   Installed TranscodingStreams ─ v0.11.3\n   Installed CSV ──────────────── v0.10.15\n    Updating `~/.julia/environments/v1.11/Project.toml`\n  [336ed68f] + CSV v0.10.15\n    Updating `~/.julia/environments/v1.11/Manifest.toml`\n  [336ed68f] + CSV v0.10.15\n  [944b1d66] + CodecZlib v0.7.6\n  [48062228] + FilePathsBase v0.9.22\n  [3bb67fe8] + TranscodingStreams v0.11.3\n  [ea10d353] + WeakRefStrings v1.4.2\n  [76eceee3] + WorkerUtilities v1.6.1\nPrecompiling project...\n    680.7 ms  ✓ WorkerUtilities\n    870.8 ms  ✓ TranscodingStreams\n   1111.5 ms  ✓ WeakRefStrings\n   1251.7 ms  ✓ FilePathsBase\n    689.2 ms  ✓ CodecZlib\n    639.4 ms  ✓ FilePathsBase → FilePathsBaseMmapExt\n   1098.7 ms  ✓ FilePathsBase → FilePathsBaseTestExt\n  13876.3 ms  ✓ CSV\n  8 dependencies successfully precompiled in 16 seconds. 68 already precompiled.\n   Resolving package versions...\n   Installed Libmount_jll ───────────────── v2.40.1+0\n   Installed LERC_jll ───────────────────── v4.0.0+0\n   Installed libdecor_jll ───────────────── v0.2.2+0\n   Installed JpegTurbo_jll ──────────────── v3.0.4+0\n   Installed x265_jll ───────────────────── v3.5.0+0\n   Installed LoggingExtras ──────────────── v1.0.3\n   Installed libfdk_aac_jll ─────────────── v2.0.3+0\n   Installed Xorg_xkbcomp_jll ───────────── v1.4.6+0\n   Installed Measures ───────────────────── v0.3.2\n   Installed Opus_jll ───────────────────── v1.3.3+0\n   Installed ConcurrentUtilities ────────── v2.4.2\n   Installed GR_jll ─────────────────────── v0.73.8+0\n   Installed Xorg_xcb_util_wm_jll ───────── v0.4.1+1\n   Installed Xorg_xcb_util_image_jll ────── v0.4.0+1\n   Installed RelocatableFolders ─────────── v1.0.1\n   Installed Grisu ──────────────────────── v1.0.2\n   Installed PlotUtils ──────────────────── v1.4.2\n   Installed Unitful ────────────────────── v1.21.0\n   Installed Contour ────────────────────── v0.6.3\n   Installed RecipesPipeline ────────────── v0.6.12\n   Installed Xorg_libpthread_stubs_jll ──── v0.1.1+0\n   Installed OpenSSL ────────────────────── v1.4.3\n   Installed Xorg_libSM_jll ─────────────── v1.2.4+0\n   Installed DelimitedFiles ─────────────── v1.9.1\n   Installed Cairo_jll ──────────────────── v1.18.2+1\n   Installed HTTP ───────────────────────── v1.10.8\n   Installed Xorg_xcb_util_jll ──────────── v0.4.0+1\n   Installed Fontconfig_jll ─────────────── v2.13.96+0\n   Installed Xorg_libxkbfile_jll ────────── v1.1.2+0\n   Installed Libgpg_error_jll ───────────── v1.49.0+0\n   Installed Xorg_libXau_jll ────────────── v1.0.11+0\n   Installed EpollShim_jll ──────────────── v0.0.20230411+0\n   Installed FFMPEG ─────────────────────── v0.4.2\n   Installed IrrationalConstants ────────── v0.2.2\n   Installed Xorg_xcb_util_keysyms_jll ──── v0.4.0+1\n   Installed ColorSchemes ───────────────── v3.26.0\n   Installed xkbcommon_jll ──────────────── v1.4.1+1\n   Installed Bzip2_jll ──────────────────── v1.0.8+2\n   Installed GR ─────────────────────────── v0.73.8\n   Installed Pango_jll ──────────────────── v1.54.1+0\n   Installed Pipe ───────────────────────── v1.3.0\n   Installed SimpleBufferStream ─────────── v1.2.0\n   Installed HarfBuzz_jll ───────────────── v8.3.1+0\n   Installed PlotThemes ─────────────────── v3.2.0\n   Installed LZO_jll ────────────────────── v2.10.2+1\n   Installed fzf_jll ────────────────────── v0.53.0+0\n   Installed FriBidi_jll ────────────────── v1.0.14+0\n   Installed Xorg_libXinerama_jll ───────── v1.1.4+4\n   Installed XZ_jll ─────────────────────── v5.4.6+0\n   Installed NaNMath ────────────────────── v1.0.2\n   Installed Showoff ────────────────────── v1.0.3\n   Installed GLFW_jll ───────────────────── v3.4.0+1\n   Installed x264_jll ───────────────────── v2021.5.5+0\n   Installed JLFzf ──────────────────────── v0.1.8\n   Installed FreeType2_jll ──────────────── v2.13.2+0\n   Installed StatsAPI ───────────────────── v1.7.0\n   Installed StatsBase ──────────────────── v0.34.3\n   Installed Colors ─────────────────────── v0.12.11\n   Installed Xorg_libxcb_jll ────────────── v1.17.0+0\n   Installed libpng_jll ─────────────────── v1.6.44+0\n   Installed mtdev_jll ──────────────────── v1.1.6+0\n   Installed libaom_jll ─────────────────── v3.9.0+0\n   Installed Scratch ────────────────────── v1.2.1\n   Installed gperf_jll ──────────────────── v3.1.1+0\n   Installed ColorTypes ─────────────────── v0.11.5\n   Installed Dbus_jll ───────────────────── v1.14.10+0\n   Installed ExceptionUnwrapping ────────── v0.1.10\n   Installed Expat_jll ──────────────────── v2.6.2+0\n   Installed Xorg_libXext_jll ───────────── v1.3.6+0\n   Installed eudev_jll ──────────────────── v3.2.9+0\n   Installed Zstd_jll ───────────────────── v1.5.6+1\n   Installed UnicodeFun ─────────────────── v0.4.1\n   Installed TensorCore ─────────────────── v0.1.1\n   Installed Xorg_xcb_util_cursor_jll ───── v0.1.4+0\n   Installed Plots ──────────────────────── v1.40.8\n   Installed Xorg_libXrender_jll ────────── v0.9.11+0\n   Installed libinput_jll ───────────────── v1.18.0+0\n   Installed libevdev_jll ───────────────── v1.11.0+0\n   Installed Libffi_jll ─────────────────── v3.2.2+1\n   Installed Ogg_jll ────────────────────── v1.3.5+1\n   Installed Libtiff_jll ────────────────── v4.7.0+0\n   Installed Format ─────────────────────── v1.3.7\n   Installed ColorVectorSpace ───────────── v0.10.0\n   Installed Xorg_libXi_jll ─────────────── v1.7.10+4\n   Installed XSLT_jll ───────────────────── v1.1.41+0\n   Installed Vulkan_Loader_jll ──────────── v1.3.243+0\n   Installed Qt6Declarative_jll ─────────── v6.7.1+2\n   Installed Qt6ShaderTools_jll ─────────── v6.7.1+1\n   Installed Xorg_libXcursor_jll ────────── v1.2.0+4\n   Installed LogExpFunctions ────────────── v0.3.28\n   Installed MacroTools ─────────────────── v0.5.13\n   Installed Xorg_xcb_util_renderutil_jll ─ v0.3.9+1\n   Installed Libuuid_jll ────────────────── v2.40.1+0\n   Installed Xorg_libICE_jll ────────────── v1.1.1+0\n   Installed libass_jll ─────────────────── v0.15.2+0\n   Installed Wayland_protocols_jll ──────── v1.31.0+0\n   Installed DocStringExtensions ────────── v0.9.3\n   Installed StableRNGs ─────────────────── v1.0.2\n   Installed Graphite2_jll ──────────────── v1.3.14+0\n   Installed Gettext_jll ────────────────── v0.21.0+0\n   Installed Pixman_jll ─────────────────── v0.43.4+0\n   Installed XML2_jll ───────────────────── v2.13.3+0\n   Installed Xorg_xtrans_jll ────────────── v1.5.0+0\n   Installed Wayland_jll ────────────────── v1.21.0+1\n   Installed OpenSSL_jll ────────────────── v3.0.15+1\n   Installed BitFlags ───────────────────── v0.1.9\n   Installed Latexify ───────────────────── v0.16.5\n   Installed Xorg_libXrandr_jll ─────────── v1.5.2+4\n   Installed LLVMOpenMP_jll ─────────────── v18.1.7+0\n   Installed FFMPEG_jll ─────────────────── v4.4.4+1\n   Installed Libgcrypt_jll ──────────────── v1.8.11+0\n   Installed Xorg_xkeyboard_config_jll ──── v2.39.0+0\n   Installed RecipesBase ────────────────── v1.3.4\n   Installed FixedPointNumbers ──────────── v0.8.5\n   Installed LAME_jll ───────────────────── v3.100.2+0\n   Installed Glib_jll ───────────────────── v2.80.5+0\n   Installed Qt6Wayland_jll ─────────────── v6.7.1+1\n   Installed Libiconv_jll ───────────────── v1.17.0+0\n   Installed URIs ───────────────────────── v1.5.1\n   Installed libvorbis_jll ──────────────── v1.3.7+2\n   Installed Qt6Base_jll ────────────────── v6.7.1+1\n   Installed Libglvnd_jll ───────────────── v1.6.0+0\n   Installed Requires ───────────────────── v1.3.0\n   Installed Xorg_libX11_jll ────────────── v1.8.6+0\n   Installed Unzip ──────────────────────── v0.2.0\n   Installed Xorg_libXdmcp_jll ──────────── v1.1.4+0\n   Installed UnitfulLatexify ────────────── v1.6.4\n   Installed Xorg_libXfixes_jll ─────────── v5.0.3+4\n    Updating `~/.julia/environments/v1.11/Project.toml`\n  [91a5bcdd] + Plots v1.40.8\n    Updating `~/.julia/environments/v1.11/Manifest.toml`\n  [d1d4a3ce] + BitFlags v0.1.9\n  [35d6a980] + ColorSchemes v3.26.0\n⌅ [3da002f7] + ColorTypes v0.11.5\n  [c3611d14] + ColorVectorSpace v0.10.0\n  [5ae59095] + Colors v0.12.11\n  [f0e56b4a] + ConcurrentUtilities v2.4.2\n  [d38c429a] + Contour v0.6.3\n  [8bb1440f] + DelimitedFiles v1.9.1\n  [ffbed154] + DocStringExtensions v0.9.3\n  [460bff9d] + ExceptionUnwrapping v0.1.10\n  [c87230d0] + FFMPEG v0.4.2\n  [53c48c17] + FixedPointNumbers v0.8.5\n  [1fa38f19] + Format v1.3.7\n  [28b8d3ca] + GR v0.73.8\n  [42e2da0e] + Grisu v1.0.2\n  [cd3eb016] + HTTP v1.10.8\n  [92d709cd] + IrrationalConstants v0.2.2\n  [1019f520] + JLFzf v0.1.8\n  [23fbe1c1] + Latexify v0.16.5\n  [2ab3a3ac] + LogExpFunctions v0.3.28\n  [e6f89c97] + LoggingExtras v1.0.3\n  [1914dd2f] + MacroTools v0.5.13\n  [442fdcdd] + Measures v0.3.2\n  [77ba4419] + NaNMath v1.0.2\n  [4d8831e6] + OpenSSL v1.4.3\n  [b98c9c47] + Pipe v1.3.0\n  [ccf2f8ad] + PlotThemes v3.2.0\n  [995b91a9] + PlotUtils v1.4.2\n  [91a5bcdd] + Plots v1.40.8\n  [3cdcf5f2] + RecipesBase v1.3.4\n  [01d81517] + RecipesPipeline v0.6.12\n  [05181044] + RelocatableFolders v1.0.1\n  [ae029012] + Requires v1.3.0\n  [6c6a2e73] + Scratch v1.2.1\n  [992d4aef] + Showoff v1.0.3\n  [777ac1f9] + SimpleBufferStream v1.2.0\n  [860ef19b] + StableRNGs v1.0.2\n  [82ae8749] + StatsAPI v1.7.0\n  [2913bbd2] + StatsBase v0.34.3\n  [62fd8b95] + TensorCore v0.1.1\n  [5c2747f8] + URIs v1.5.1\n  [1cfade01] + UnicodeFun v0.4.1\n  [1986cc42] + Unitful v1.21.0\n  [45397f5d] + UnitfulLatexify v1.6.4\n  [41fe7b60] + Unzip v0.2.0\n  [6e34b625] + Bzip2_jll v1.0.8+2\n  [83423d85] + Cairo_jll v1.18.2+1\n  [ee1fde0b] + Dbus_jll v1.14.10+0\n  [2702e6a9] + EpollShim_jll v0.0.20230411+0\n  [2e619515] + Expat_jll v2.6.2+0\n⌅ [b22a6f82] + FFMPEG_jll v4.4.4+1\n  [a3f928ae] + Fontconfig_jll v2.13.96+0\n  [d7e528f0] + FreeType2_jll v2.13.2+0\n  [559328eb] + FriBidi_jll v1.0.14+0\n  [0656b61e] + GLFW_jll v3.4.0+1\n  [d2c73de3] + GR_jll v0.73.8+0\n  [78b55507] + Gettext_jll v0.21.0+0\n  [7746bdde] + Glib_jll v2.80.5+0\n  [3b182d85] + Graphite2_jll v1.3.14+0\n  [2e76f6c2] + HarfBuzz_jll v8.3.1+0\n  [aacddb02] + JpegTurbo_jll v3.0.4+0\n  [c1c5ebd0] + LAME_jll v3.100.2+0\n  [88015f11] + LERC_jll v4.0.0+0\n  [1d63c593] + LLVMOpenMP_jll v18.1.7+0\n  [dd4b983a] + LZO_jll v2.10.2+1\n⌅ [e9f186c6] + Libffi_jll v3.2.2+1\n  [d4300ac3] + Libgcrypt_jll v1.8.11+0\n  [7e76a0d4] + Libglvnd_jll v1.6.0+0\n  [7add5ba3] + Libgpg_error_jll v1.49.0+0\n  [94ce4f54] + Libiconv_jll v1.17.0+0\n  [4b2f31a3] + Libmount_jll v2.40.1+0\n  [89763e89] + Libtiff_jll v4.7.0+0\n  [38a345b3] + Libuuid_jll v2.40.1+0\n  [e7412a2a] + Ogg_jll v1.3.5+1\n  [458c3c95] + OpenSSL_jll v3.0.15+1\n  [91d4177d] + Opus_jll v1.3.3+0\n  [36c8627f] + Pango_jll v1.54.1+0\n  [30392449] + Pixman_jll v0.43.4+0\n  [c0090381] + Qt6Base_jll v6.7.1+1\n  [629bc702] + Qt6Declarative_jll v6.7.1+2\n  [ce943373] + Qt6ShaderTools_jll v6.7.1+1\n  [e99dba38] + Qt6Wayland_jll v6.7.1+1\n  [a44049a8] + Vulkan_Loader_jll v1.3.243+0\n  [a2964d1f] + Wayland_jll v1.21.0+1\n  [2381bf8a] + Wayland_protocols_jll v1.31.0+0\n  [02c8fc9c] + XML2_jll v2.13.3+0\n  [aed1982a] + XSLT_jll v1.1.41+0\n  [ffd25f8a] + XZ_jll v5.4.6+0\n  [f67eecfb] + Xorg_libICE_jll v1.1.1+0\n  [c834827a] + Xorg_libSM_jll v1.2.4+0\n  [4f6342f7] + Xorg_libX11_jll v1.8.6+0\n  [0c0b7dd1] + Xorg_libXau_jll v1.0.11+0\n  [935fb764] + Xorg_libXcursor_jll v1.2.0+4\n  [a3789734] + Xorg_libXdmcp_jll v1.1.4+0\n  [1082639a] + Xorg_libXext_jll v1.3.6+0\n  [d091e8ba] + Xorg_libXfixes_jll v5.0.3+4\n  [a51aa0fd] + Xorg_libXi_jll v1.7.10+4\n  [d1454406] + Xorg_libXinerama_jll v1.1.4+4\n  [ec84b674] + Xorg_libXrandr_jll v1.5.2+4\n  [ea2f1a96] + Xorg_libXrender_jll v0.9.11+0\n  [14d82f49] + Xorg_libpthread_stubs_jll v0.1.1+0\n  [c7cfdc94] + Xorg_libxcb_jll v1.17.0+0\n  [cc61e674] + Xorg_libxkbfile_jll v1.1.2+0\n  [e920d4aa] + Xorg_xcb_util_cursor_jll v0.1.4+0\n  [12413925] + Xorg_xcb_util_image_jll v0.4.0+1\n  [2def613f] + Xorg_xcb_util_jll v0.4.0+1\n  [975044d2] + Xorg_xcb_util_keysyms_jll v0.4.0+1\n  [0d47668e] + Xorg_xcb_util_renderutil_jll v0.3.9+1\n  [c22f9ab0] + Xorg_xcb_util_wm_jll v0.4.1+1\n  [35661453] + Xorg_xkbcomp_jll v1.4.6+0\n  [33bec58e] + Xorg_xkeyboard_config_jll v2.39.0+0\n  [c5fb5394] + Xorg_xtrans_jll v1.5.0+0\n  [3161d3a3] + Zstd_jll v1.5.6+1\n  [35ca27e7] + eudev_jll v3.2.9+0\n  [214eeab7] + fzf_jll v0.53.0+0\n  [1a1c6b14] + gperf_jll v3.1.1+0\n  [a4ae2306] + libaom_jll v3.9.0+0\n  [0ac62f75] + libass_jll v0.15.2+0\n  [1183f4f0] + libdecor_jll v0.2.2+0\n  [2db6ffa8] + libevdev_jll v1.11.0+0\n  [f638f0a6] + libfdk_aac_jll v2.0.3+0\n  [36db933b] + libinput_jll v1.18.0+0\n  [b53b4c65] + libpng_jll v1.6.44+0\n  [f27f6e37] + libvorbis_jll v1.3.7+2\n  [009596ad] + mtdev_jll v1.1.6+0\n⌅ [1270edf5] + x264_jll v2021.5.5+0\n⌅ [dfaa095f] + x265_jll v3.5.0+0\n  [d8fb68d0] + xkbcommon_jll v1.4.1+1\n  [2f01184e] + SparseArrays v1.11.0\n  [05823500] + OpenLibm_jll v0.8.1+2\n  [efcefdf7] + PCRE2_jll v10.42.0+1\n  [bea87d4a] + SuiteSparse_jll v7.7.0+0\n        Info Packages marked with ⌅ have new versions available but compatibility constraints restrict them from upgrading. To see why use `status --outdated -m`\nPrecompiling project...\n    706.6 ms  ✓ Pipe\n    743.4 ms  ✓ Contour\n    849.5 ms  ✓ TensorCore\n    872.6 ms  ✓ StatsAPI\n    889.2 ms  ✓ Measures\n    899.7 ms  ✓ StableRNGs\n   1004.2 ms  ✓ Requires\n   1476.4 ms  ✓ Grisu\n   2383.7 ms  ✓ Format\n   1160.4 ms  ✓ Unzip\n   1072.2 ms  ✓ URIs\n    943.1 ms  ✓ SimpleBufferStream\n    785.9 ms  ✓ NaNMath\n   1759.9 ms  ✓ IrrationalConstants\n   1135.3 ms  ✓ DelimitedFiles\n   1122.4 ms  ✓ Statistics → SparseArraysExt\n    991.9 ms  ✓ BitFlags\n   1364.0 ms  ✓ ConcurrentUtilities\n    980.1 ms  ✓ Scratch\n   1085.1 ms  ✓ LoggingExtras\n   1204.8 ms  ✓ DocStringExtensions\n   1035.6 ms  ✓ ExceptionUnwrapping\n   1066.8 ms  ✓ OpenSSL_jll\n   1119.4 ms  ✓ Libmount_jll\n   2799.0 ms  ✓ UnicodeFun\n   1171.5 ms  ✓ EpollShim_jll\n   1376.7 ms  ✓ LLVMOpenMP_jll\n   4499.9 ms  ✓ MacroTools\n   1252.1 ms  ✓ Xorg_libICE_jll\n   1039.4 ms  ✓ Xorg_libXau_jll\n   1151.4 ms  ✓ libfdk_aac_jll\n   1206.9 ms  ✓ libpng_jll\n   1076.4 ms  ✓ LERC_jll\n   1315.8 ms  ✓ LAME_jll\n   1139.4 ms  ✓ fzf_jll\n   1095.9 ms  ✓ JpegTurbo_jll\n   1183.7 ms  ✓ XZ_jll\n   1159.1 ms  ✓ Xorg_libXdmcp_jll\n   1146.5 ms  ✓ libaom_jll\n   1235.8 ms  ✓ Zstd_jll\n   1116.2 ms  ✓ Expat_jll\n   1111.8 ms  ✓ LZO_jll\n   1113.4 ms  ✓ Xorg_xtrans_jll\n   1311.4 ms  ✓ Opus_jll\n   1018.2 ms  ✓ Libgpg_error_jll\n   1215.7 ms  ✓ Libiconv_jll\n   1016.0 ms  ✓ Xorg_libpthread_stubs_jll\n   1148.1 ms  ✓ Libuuid_jll\n   1434.4 ms  ✓ FriBidi_jll\n   1103.0 ms  ✓ Graphite2_jll\n   1148.1 ms  ✓ Bzip2_jll\n   1414.7 ms  ✓ Ogg_jll\n   2999.8 ms  ✓ RecipesBase\n   1268.6 ms  ✓ mtdev_jll\n   1231.6 ms  ✓ gperf_jll\n   1040.9 ms  ✓ x265_jll\n   1131.6 ms  ✓ libevdev_jll\n    995.6 ms  ✓ Libffi_jll\n   1362.2 ms  ✓ x264_jll\n   1160.0 ms  ✓ Wayland_protocols_jll\n    879.4 ms  ✓ Showoff\n    841.0 ms  ✓ RelocatableFolders\n   1023.4 ms  ✓ LogExpFunctions\n   1184.7 ms  ✓ Pixman_jll\n   1319.7 ms  ✓ Xorg_libSM_jll\n   4153.4 ms  ✓ FixedPointNumbers\n   3687.6 ms  ✓ OpenSSL\n   2105.7 ms  ✓ JLFzf\n   1340.8 ms  ✓ Libtiff_jll\n   1240.8 ms  ✓ Dbus_jll\n   1337.3 ms  ✓ XML2_jll\n   1409.6 ms  ✓ Libgcrypt_jll\n   1335.6 ms  ✓ FreeType2_jll\n   5533.8 ms  ✓ Latexify\n   1303.9 ms  ✓ eudev_jll\n   1426.4 ms  ✓ libvorbis_jll\n   1174.7 ms  ✓ Gettext_jll\n   1362.1 ms  ✓ Wayland_jll\n   3853.1 ms  ✓ StatsBase\n   4510.5 ms  ✓ ColorTypes\n   1527.0 ms  ✓ XSLT_jll\n   1701.5 ms  ✓ Fontconfig_jll\n   1795.2 ms  ✓ Latexify → SparseArraysExt\n   1492.9 ms  ✓ libinput_jll\n   7049.3 ms  ✓ HTTP\n   1832.5 ms  ✓ Glib_jll\n   3183.5 ms  ✓ Latexify → DataFramesExt\n   2275.4 ms  ✓ Xorg_libxcb_jll\n   4447.6 ms  ✓ ColorVectorSpace\n   1502.8 ms  ✓ Xorg_libX11_jll\n   1635.3 ms  ✓ Xorg_xcb_util_jll\n   1583.3 ms  ✓ Xorg_libXrender_jll\n   1626.3 ms  ✓ Xorg_libXext_jll\n   1601.7 ms  ✓ Xorg_libXfixes_jll\n   1632.9 ms  ✓ Xorg_libxkbfile_jll\n   1595.4 ms  ✓ Xorg_xcb_util_image_jll\n   1986.2 ms  ✓ Xorg_xcb_util_keysyms_jll\n  37732.9 ms  ✓ Unitful\n   1300.7 ms  ✓ Xorg_xcb_util_renderutil_jll\n   8410.6 ms  ✓ Colors\n   1377.1 ms  ✓ Xorg_xcb_util_wm_jll\n   1203.9 ms  ✓ Xorg_libXinerama_jll\n   1474.9 ms  ✓ Xorg_libXrandr_jll\n   1147.2 ms  ✓ Xorg_libXcursor_jll\n   1354.8 ms  ✓ Libglvnd_jll\n   1379.6 ms  ✓ Cairo_jll\n   1142.6 ms  ✓ Xorg_libXi_jll\n   1264.1 ms  ✓ Xorg_xkbcomp_jll\n   1332.4 ms  ✓ Xorg_xcb_util_cursor_jll\n   1170.4 ms  ✓ HarfBuzz_jll\n   1075.5 ms  ✓ Xorg_xkeyboard_config_jll\n   2734.4 ms  ✓ UnitfulLatexify\n   1258.0 ms  ✓ libass_jll\n   1416.5 ms  ✓ Pango_jll\n   1007.6 ms  ✓ xkbcommon_jll\n   1318.5 ms  ✓ FFMPEG_jll\n   1034.3 ms  ✓ Vulkan_Loader_jll\n   1062.4 ms  ✓ libdecor_jll\n   1040.6 ms  ✓ FFMPEG\n   5029.0 ms  ✓ ColorSchemes\n   1088.6 ms  ✓ GLFW_jll\n   1205.7 ms  ✓ Qt6Base_jll\n    709.3 ms  ✓ Qt6ShaderTools_jll\n   1284.2 ms  ✓ GR_jll\n   1420.4 ms  ✓ Qt6Declarative_jll\n    736.1 ms  ✓ Qt6Wayland_jll\n   3692.1 ms  ✓ GR\n  10063.0 ms  ✓ PlotUtils\n   2906.8 ms  ✓ PlotThemes\n   4379.8 ms  ✓ RecipesPipeline\n  61790.1 ms  ✓ Plots\n   2793.3 ms  ✓ Plots → UnitfulExt\n   2860.5 ms  ✓ Plots → IJuliaExt\n  133 dependencies successfully precompiled in 127 seconds. 80 already precompiled."
  },
  {
    "objectID": "lecture1.html#julia-ecosystem",
    "href": "lecture1.html#julia-ecosystem",
    "title": "Introduction to Julia ecosystem",
    "section": "1 Julia ecosystem",
    "text": "1 Julia ecosystem\nWikipedia citation:\n\nJulia is a high-level, general-purpose dynamic programming language, still designed to be fast and productive, for e.g. data science, artificial intelligence, machine learning, modeling and simulation, most commonly used for numerical analysis and computational science.\n\n\nThe work on Julia began in 2009 when Jeff Bezanson, Stefan Karpinski, Alan Edelman and Viral B. Shah set out to create a free language that was both high-level and fast. The first public appearance is in 2012. Julia’s syntax is now considered stable, since version 1.0 in 2018.\nJulia can be easily downloaded and installed. See the download page where we can find the following.\n\nMac / LinuxWindows\n\n\nInstall the latest Julia version by running this in your terminal:\ncurl -fsSL https://install.julialang.org | sh\n\n\nInstall the latest Julia version from the Microsoft Store by running this in the command prompt:\nwinget install julia -s msstore\n\n\n\nOn the Julia official webpage one can find the following summary of Julia ecosystem.\n\nVisualizationGeneralData ScienceMLScientific DomainsParallel\n\n\n\n\n1.0.1 Data Visualization and Plotting\nData visualization has a complicated history. Plotting software makes trade-offs between features and simplicity, speed and beauty, and a static and dynamic interface. Some packages make a display and never change it, while others make updates in real-time.\nPlots.jl is a visualization interface and toolset. It provides a common API across various backends, like GR.jl, PyPlot.jl, and PlotlyJS.jl. Makie.jl is a sophisticated package for complex graphics and animations. Users who are used to “grammar of graphics” plotting APIs should take a look at Gadfly.jl. VegaLite.jl provides the Vega-Lite grammar of interactive graphics interface as a Julia package. For those who do not wish to leave the comfort of the terminal, there is also UnicodePlots.jl.\n\n\n\n\n\n1.0.2 Build, Deploy or Embed Your Code\nJulia makes it possible to build complete applications. Write web UIs with Dash.jl and Genie.jl or native UIs with Gtk4.jl. Pull data from a variety of databases. Build shared libraries and executables with PackageCompiler. Deploy on a webserver with HTTP.jl or embedded devices. Powerful shell integration make it easy to managing other processes.\nJulia has foreign function interfaces for C, Fortran, C++, Python, R, Java, Mathematica, Matlab, and many other languages. Julia can also be embedded in other programs through its embedding API. Julia’s PackageCompiler makes it possible to build binaries from Julia programs that can be integrated into larger projects. Python programs can call Julia using juliacall. R programs can do the same with R’s JuliaCall, which is demonstrated by calling MixedModels.jl from R. Mathematica supports calling Julia through its External Evaluation System.\n\n\n\n\n\n1.0.3 Interact with your Data\nThe Julia data ecosystem provides DataFrames.jl to work with datasets, and perform common data manipulations. CSV.jl is a fast multi-threaded package to read CSV files and integration with the Arrow ecosystem is in the works with Arrow.jl. Online computations on streaming data can be performed with OnlineStats.jl. The Queryverse provides query, file IO and visualization functionality. In addition to working with tabular data, the JuliaGraphs packages make it easy to work with combinatorial data.\nJulia can work with almost all databases using JDBC.jl and ODBC.jl drivers. In addition, it also integrates with the Spark ecosystem through Spark.jl.\n\n\n\n\n\n1.0.4 Scalable Machine Learning\nThe MLJ.jl package provides a unified interface to common machine learning algorithms, which include generalized linear models, decision trees, and clustering. Flux.jl and Lux.jl are powerful packages for Deep Learning. Packages such as Metalhead.jl, ObjectDetector.jl, and TextAnalysis.jl provide ready to use pre-trained models for common tasks. AlphaZero.jl provides a high performance implementation of the reinforcement learning algorithms from AlphaZero. Turing.jl is a best in class package for probabilistic programming.\n\n\n\n\n\n1.0.5 Rich Ecosystem for Scientific Computing\nJulia is designed from the ground up to be very good at numerical and scientific computing. This can be seen in the abundance of scientific tooling written in Julia, such as the state-of-the-art differential equations ecosystem (DifferentialEquations.jl), optimization tools (JuMP.jl and Optim.jl), iterative linear solvers (IterativeSolvers.jl), Fast Fourier transforms (AbstractFFTs.jl), and much more. General purpose simulation frameworks are available for Scientific Machine Learning, Quantum computing and much more.\nJulia also offers a number of domain-specific ecosystems, such as in biology (BioJulia), operations research (JuMP Dev), image processing (JuliaImages), quantum physics (QuantumBFS), nonlinear dynamics (JuliaDynamics), quantitative economics (QuantEcon), astronomy (JuliaAstro) and ecology (EcoJulia). With a set of highly enthusiastic developers and maintainers, the scientific ecosystem in Julia continues to grow rapidly.\n\n\n\n\n\n1.0.6 Parallel and Heterogeneous Computing\nJulia is designed for parallelism, and provides built-in primitives for parallel computing at every level: instruction level parallelism, multi-threading, GPU computing, and distributed computing. The Celeste.jl project achieved 1.5 PetaFLOP/s on the Cori supercomputer at NERSC using 650,000 cores.\nThe Julia compiler can also generate native code for GPUs. Packages such as DistributedArrays.jl and Dagger.jl provide higher levels of abstraction for parallelism. Distributed Linear Algebra is provided by packages like Elemental.jl and TSVD.jl. MPI style parallelism is also available through MPI.jl.\n\n\n\n\nJulia is a modern language and comes with cloud computing and more, see JuliaHub webpage and the JuliaHub help page.\n\nThe Modern Platform for Technical Computing. A single place for modeling, simulation, and user built applications with the Julia language. Designed with access to CPUs and GPUs for multi-threading, parallel and distributed computing, JuliaHub’s supercomputing infrastructure allows teams to model breakthrough science and technology.\n\nThe Julia programming language has its own conference, see the JuliaCon 2024.\n\nWelcome to JuliaCon 2024, the premier annual conference for the Julia programming language community! This exciting event brings together developers, researchers, and enthusiasts from around the globe to celebrate and explore the power and versatility of Julia."
  },
  {
    "objectID": "lecture1.html#code-execution",
    "href": "lecture1.html#code-execution",
    "title": "Introduction to Julia ecosystem",
    "section": "2 Code execution",
    "text": "2 Code execution\nThere are different ways to execute Julia code:\n\nwithin a .ipynb file, that is a Jupyter notebook;\ndirectly into the Julia REPL;\nfrom a script file .jl, either in the REPL or in the terminal;\n…\n\n\n2.1 Jupyter notebooks\n\nYou can write some Julia code inside a Jupyter notebook and execute the code. To interact with the Julia language using Jupyter notebook, please install IJulia.jl.\n\nIJulia is a Julia-language backend combined with the Jupyter interactive environment (also used by IPython). This combination allows you to interact with the Julia language using Jupyter/IPython’s powerful graphical notebook, which combines code, formatted text, math, and multimedia in a single document. IJulia is a Jupyter language kernel and works with a variety of notebook user interfaces. In addition to the classic Jupyter Notebook, IJulia also works with JupyterLab, a Jupyter-based integrated development environment for notebooks and code. The nteract notebook desktop supports IJulia with detailed instructions for its installation with nteract.\n\nTry to execute the code of example.ipynb.\n\n\n2.2 The Julia REPL\nJulia comes with a full-featured interactive command-line REPL (read-eval-print loop) built into the julia executable. In addition to allowing quick and easy evaluation of Julia statements, it has a searchable history, tab-completion, many helpful keybindings, and dedicated help and shell modes. The REPL can be started by simply calling julia with no arguments or double-clicking on the executable:\n\n\n$ julia\n\n               _\n   _       _ _(_)_     |  Documentation: https://docs.julialang.org\n  (_)     | (_) (_)    |\n   _ _   _| |_  __ _   |  Type \"?\" for help, \"]?\" for Pkg help.\n  | | | | | | |/ _` |  |\n  | | |_| | | | (_| |  |  Version 1.11.1 (2024-10-16)\n _/ |\\__'_|_|_|\\__'_|  |  Official https://julialang.org/ release\n|__/                   |\n\n\njulia&gt;\n\n\nAfter Julia is launched you can start computing.\n\n1+1\n\n2\n\n\nOr print some text.\n\nprint(\"Hello!\")\n\nHello!\n\n\n\n\n\n\n\n\nImportant\n\n\n\nThe Julia REPL has different prompt modes that can be very useful to install / remove packages, run shell commands, search for help, etc. The different modes are:\n\nThe Julian mode\nHelp mode\nShell mode\nPkg mode\nSearch modes\n\nVisit the command-line REPL page for more details.\n\n\n\n\n2.3 Julia scripts\nYou can also write some code in a .jl script.\n\n\n$ cat data/lecture1/example.jl\n\nprintln(\"Hello!\")\n\n\nand execute the code either in the REPL:\n\ninclude(\"data/lecture1/example.jl\")\n\nHello!\n\n\nor in a terminal with the command $ julia example.jl."
  },
  {
    "objectID": "lecture1.html#basic-examples-of-code",
    "href": "lecture1.html#basic-examples-of-code",
    "title": "Introduction to Julia ecosystem",
    "section": "3 Basic examples of code",
    "text": "3 Basic examples of code\n\nx = 1\n2x\n\n2\n\n\n\nx = sqrt(2)\n\n1.4142135623730951\n\n\n\n# unicode is great\nx = √(2)\n\n1.4142135623730951\n\n\n\n😄 = sqrt(2)\n2😄\n\n2.8284271247461903\n\n\nSome functions.\n\n# this is a function\nfunction f(x)\n  return 2x+1\nend\n\nf (generic function with 1 method)\n\n\n\n# this also\nf(x) = 2x+1\n\nf (generic function with 1 method)\n\n\n\n# this also: but f is not available anymore\ng = x -&gt; 2x^2\n\n#11 (generic function with 1 method)\n\n\n\n# be careful of the priorities\ng(1)\n\n2\n\n\n\nHello(name) = \"Hello \" * name * \"!\"\nHello(\"Alban\")\n\n\"Hello Alban!\"\n\n\n\nx = [1 3 12]\nprintln(\"x[2] = \", x[2])\nx[2] = 5\nprintln(\"x[2] = \", x[2])\n\nx[2] = 3\nx[2] = 5\n\n\nThe following function has side effects that can be dangerous.\n\nfunction f(x, y)\n    x[1] = 42      # mutates x\n    y = 7 + sum(x) # new binding for y, no mutation\n    return y\nend\n\na = [4, 5, 6]\nb = 3\n\nprintln(\"f($a, $b) = \", f(a, b))\nprintln(\"a = \", a, \" # a[1] is changed to 42 by f\")\nprintln(\"b = \", b, \" # not changed\")\n\nf([4, 5, 6], 3) = 60\na = [42, 5, 6] # a[1] is changed to 42 by f\nb = 3 # not changed\n\n\nWhen a function has side effects, please use the ! convention. See Argument Passing Behavior.\n\nfunction put_at_second_place!(x, value)\n  x[2] = value\n  return nothing\nend\n\nx = [1 3 12]\nprintln(\"x[2] = \", x[2])\n\nput_at_second_place!(x, 5)\nprintln(\"x[2] = \", x[2])\n\nput_at_second_place!(x[1:3], 15) # be careful if you give a slice\nprintln(\"x[2] = \", x[2])\n\nx[2] = 3\nx[2] = 5\nx[2] = 5\n\n\nA function may have several methods.\n\nΣ(x::Float64, y::Float64) = 2x + y\n\nΣ (generic function with 1 method)\n\n\n\nΣ(2.0, 3.0)\n\n7.0\n\n\n\nΣ(2, 3.0)\n\n\nMethodError: no method matching Σ(::Int64, ::Float64)\nThe function `Σ` exists, but no method is defined for this combination of argument types.\n\nClosest candidates are:\n  Σ(::Float64, ::Float64)\n   @ Main In[20]:1\n\n\nStacktrace:\n [1] top-level scope\n   @ In[22]:1\n\n\n\n\nh(x::Number,  y::Number ) = 2x - y\nh(x::Int,     y::Int    ) = 2x * y\nh(x::Float64, y::Float64) = 2x + y\n\nh (generic function with 3 methods)\n\n\n\nprintln(\"h(2,   3.0) = \", h(2, 3.0))\nprintln(\"h(2,   3  ) = \", h(2, 3))\nprintln(\"h(2.0, 3.0) = \", h(2.0, 3.0))\n\nh(2,   3.0) = 1.0\nh(2,   3  ) = 12\nh(2.0, 3.0) = 7.0"
  },
  {
    "objectID": "lecture1.html#documentation",
    "href": "lecture1.html#documentation",
    "title": "Introduction to Julia ecosystem",
    "section": "4 Documentation",
    "text": "4 Documentation\n\nIn the Julia documentation, you may find:\n\nsome important Links;\na comparison to other languages;\na list of advantages of using Julia\n\nbut also:\n\nmanuals;\nbase documentation;\nstandard librairies documentation;\ndeveloper documentation.\n\n\n\n\n\n\n\nNote\n\n\n\nIn Julia, it is quite common to have the documentation in the form of manuals or tutorials. See Getting Started with Differential Equations in Julia for instance.\n\n\nExample. Search how to compute the norm of a vector.\n\nThe norm function comes from the standard librairy LinearAlgebra.\n\nHowever, we are not directly at the right place, so I recommend to use the Search docs field.\n\nAnd now, we have the documentation.\n\n\n\n\n\n\n\nNote\n\n\n\nIt is also possible to use the help mode:\nusing LinearAlgebra\n?norm"
  },
  {
    "objectID": "lecture1.html#editors-and-ides",
    "href": "lecture1.html#editors-and-ides",
    "title": "Introduction to Julia ecosystem",
    "section": "5 Editors and IDEs",
    "text": "5 Editors and IDEs\n\n\nVS Code    VS Code Extension \n\n\nJupyter    Jupyter kernel \n\n\nPluto.jl    Simple reactive notebooks \n\n\nVim    Vim plugin \n\n\nEmacs    Emacs plugin \n\n\nI recommend to use VS Code. You can download it here. See the Julia Visual Studio Code Documentation.\n\nJulia for Visual Studio Code is a powerful, free IDE for the Julia language. Visual Studio Code is a powerful and customizable editor. With a completely live environment, Julia for VS Code aims to take the frustration and guesswork out of programming and put the fun back in. We build on Julia’s unique combination of ease-of-use and performance. Beginners and experts can build better software more quickly, and get to a result faster. Julia is an officially supported language on the VS Code docs."
  },
  {
    "objectID": "lecture1.html#exercise",
    "href": "lecture1.html#exercise",
    "title": "Introduction to Julia ecosystem",
    "section": "6 Exercise",
    "text": "6 Exercise\n\n6.1 Context: Least Squares Regression Line\nWe propose a first exercise about simple linear regression. The data are excerpted from this example and saved into data.csv. We propose an ordinary least squares formulation which is a type of linear least squares method for choosing the unknown parameters in a linear regression model by the principle of least squares: minimizing the sum of the squares of the differences between the observed dependent variable (values of the variable being observed) in the input dataset and the output of the (linear) function of the independent variable.\n\nGiven a set of m data points y_{1}, y_{2}, \\dots, y_{m}, consisting of experimentally measured values taken at m values x_{1}, x_{2}, \\dots, x_{m} of an independent variable (x_i may be scalar or vector quantities), and given a model function y=f(x,\\beta), with \\beta =(\\beta_{1},\\beta_{2},\\dots ,\\beta_{n}), it is desired to find the parameters \\beta_j such that the model function “best” fits the data. In linear least squares, linearity is meant to be with respect to parameters \\beta_j, so \n  f(x, \\beta) = \\sum_{j=1}^n \\beta_j\\, \\varphi_j(x).\n In general, the functions \\varphi_j may be nonlinear. However, we consider linear regression, that is \n  f(x, \\beta) = \\beta_1 + \\beta_2 x.\n Ideally, the model function fits the data exactly, so \n  y_i = f(x_i, \\beta)\n for all i=1, 2, \\dots, m. This is usually not possible in practice, as there are more data points than there are parameters to be determined. The approach chosen then is to find the minimal possible value of the sum of squares of the residuals \n  r_i(\\beta) = y_i - f(x_i, \\beta), \\quad i=1, 2, \\dots, m\n so to minimize the function \n  S(\\beta) = \\sum_{i=1}^m r_i^2(\\beta).\n In the linear least squares case, the residuals are of the form \n  r(\\beta) = y - X\\, \\beta\n with y = (y_i)_{1\\le i\\le m} \\in \\mathbb{R}^m and X = (X_{ij})_{1\\le i\\le m, 1\\le j\\le n} \\in \\mathrm{M}_{mn}(\\mathbb{R}), where X_{ij} = \\varphi_j(x_i). Since we consider linear regression, the i-th row of the matrix X is given by \n  X_{i[:]} = [1 \\quad x_i].\n The objective function may be written \n  S(\\beta) = {\\Vert y - X\\, \\beta \\Vert}^2\n where the norm is the usual 2-norm. The solution to the linear least squares problem \n  \\underset{\\beta \\in \\mathbb{R}^n}{\\mathrm{minimize}}\\, {\\Vert y - X\\, \\beta \\Vert}^2\n is computed by solving the normal equation \n  X^\\top X\\, \\beta = X^\\top y,\n where X^\\top denotes the transpose of X.\n\n\n6.2 Questions\nTo answer the questions you need to import the following packages.\n\nusing DataFrames\nusing CSV\nusing Plots\n\nYou also need to download the csv file. Click on the following image.\n  \n\nUsing the packages DataFrames.jl and CSV.jl, load the dataset from data/lecture1/data.csv and save the result into a variable named dataset.\n\n\n\nShow the answer\npath = \"data/lecture1/data.csv\" # update depending on the location of your file\ndataset = DataFrame(CSV.File(path))\n\n\n5×2 DataFrame\n\n\n\nRow\nTime\nMass\n\n\n\nInt64\nInt64\n\n\n\n\n1\n5\n40\n\n\n2\n7\n120\n\n\n3\n12\n180\n\n\n4\n16\n210\n\n\n5\n20\n240\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nDo not hesitate to visit the documentation of CSV.jl and DataFrames.jl.\n\n\n\nUsing the package Plot.jl, plot the data.\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nUse names(dataset) to get the list of data names. If Time is a name you can access to the associated data by dataset.Time.\n\n\n\n\n\nShow the answer\nplt = plot(\n  dataset.Time, \n  dataset.Mass,\n  seriestype=:scatter, \n  legend=false, \n  xlabel=\"Time\", \n  ylabel=\"Mass\"\n)\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreate the matrix X, the vector \\beta and solve the normal equation with the operator Base.\\.\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nUse ones(m) to generate a vector of 1 of length m.\n\n\n\n\n\nShow the answer\nm = length(dataset.Time)\nX = [ones(m) dataset.Time]\ny = dataset.Mass\nβ = X\\y\n\n\n2-element Vector{Float64}:\n 11.506493506493515\n 12.207792207792208\n\n\n\nPlot the linear model on the same plot as the data. Use the plot! function. See the basic concepts for plotting.\n\n\n\nShow the answer\nx = [5, 20]\ny = β[1] .+ β[2]*x\nplot!(plt, x, y)"
  }
]